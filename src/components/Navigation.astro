---
import Container from './Container.astro';

interface NavItem {
  name: string;
  href: string;
  isButton?: boolean;
}

const menuItems: NavItem[] = [
  { 
    name: 'Home', 
    href: '/',
    isButton: false
  },
  { 
    name: 'Services', 
    href: '/services',
    isButton: false
  },
  { 
    name: 'About Us', 
    href: '/about',
    isButton: false
  },
  { 
    name: 'Contact', 
    href: '/contact',
    isButton: false
  }
];

const pathname = new URL(Astro.request.url).pathname;
---

<nav class="fixed w-full z-50 top-0 start-0 bg-navy-900/90 backdrop-blur-xl border-b border-navy-300/10">
  <Container>
    <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
      <a href="/" class="flex items-center space-x-3 rtl:space-x-reverse">
        <img src="/images/Logo.svg" class="h-8" alt="Zhive Logo" />
        <span class="text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary-500 to-accent-500">
          Zhive<span class="text-white">249</span>
        </span>
      </a>

      <!-- Mobile menu button -->
      <button
        id="mobile-menu-button"
        type="button"
        class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
        aria-controls="navbar"
        aria-expanded="false"
      >
        <span class="sr-only">Open main menu</span>
        <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
        </svg>
      </button>

      <!-- Menu items -->
      <div class="hidden w-full md:block md:w-auto" id="navbar">
        <ul class="font-medium flex flex-col p-4 md:p-0 mt-4 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0">
          {
            menuItems.map((item) => (
              <li>
                <a
                  href={item.href}
                  class={`block py-2 px-3 text-dark-400 dark:text-dark-300 hover:text-primary-500 dark:hover:text-primary-400 md:p-0 ${
                    pathname === item.href ? 'text-primary-500' : ''
                  }`}
                >
                  {item.name}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
  </Container>
</nav>

<script>
  // Handle mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const navbar = document.getElementById('navbar');

  if (mobileMenuButton && navbar) {
    mobileMenuButton.addEventListener('click', () => {
      navbar.classList.toggle('hidden');
      const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
      mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
    });

    // Close menu when clicking outside
    document.addEventListener('click', (event) => {
      const target = event.target as Node;
      if (!navbar.contains(target) && !mobileMenuButton.contains(target)) {
        navbar.classList.add('hidden');
      }
    });

    // Close menu when pressing Escape
    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape') {
        navbar.classList.add('hidden');
      }
    });
  }
</script>

<style>
  /* Add any custom styles here */
</style>
