---
const formAction = "https://formspree.io/f/xlddeywg"; 
---

<form
  action={formAction}
  method="POST"
  class="space-y-6"
  id="contact-form"
  on:submit={handleSubmit}
>
  <!-- Name Field -->
  <div class="form-group">
    <label for="name" class="form-label">Name</label>
    <input
      type="text"
      id="name"
      name="name"
      required
      class="form-input"
    />
    <p id="name-error" class="error-message hidden">Name is required.</p>
  </div>

  <!-- Email Field -->
  <div class="form-group">
    <label for="email" class="form-label">Email</label>
    <input
      type="email"
      id="email"
      name="email"
      required
      class="form-input"
    />
    <p id="email-error" class="error-message hidden">Valid email is required.</p>
  </div>

  <!-- Message Field -->
  <div class="form-group">
    <label for="message" class="form-label">Message</label>
    <textarea
      id="message"
      name="message"
      rows="4"
      required
      class="form-input"
    ></textarea>
    <p id="message-error" class="error-message hidden">Message is required.</p>
  </div>

  <!-- Submit Button -->
  <div class="form-group">
    <button
      type="submit"
      class="submit-btn"
    >
      Send Message
    </button>
  </div>

  <!-- Form Status (Success/Error Messages) -->
  <div id="form-status" class="hidden">
    <p id="success-message" class="success-message hidden">Message sent successfully!</p>
    <p id="error-message" class="error-message hidden">Failed to send message. Please try again.</p>
  </div>
</form>

<script lang="ts">
  import { useState } from 'react';

  // State for form submission status
  const [formStatus, setFormStatus] = useState('hidden');
  const [successMessage, setSuccessMessage] = useState('hidden');
  const [errorMessage, setErrorMessage] = useState('hidden');

  function validateName(name: string): boolean {
    return name.trim() !== '';
  }

  function validateEmail(email: string): boolean {
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailPattern.test(email);
  }

  function validateMessage(message: string): boolean {
    return message.trim() !== '';
  }

  function handleSubmit(e: Event) {
    e.preventDefault();

    const name = (document.getElementById('name') as HTMLInputElement).value;
    const email = (document.getElementById('email') as HTMLInputElement).value;
    const message = (document.getElementById('message') as HTMLTextAreaElement).value;

    let isValid = true;

    if (!validateName(name)) {
      document.getElementById('name-error')?.classList.remove('hidden');
      isValid = false;
    } else {
      document.getElementById('name-error')?.classList.add('hidden');
    }

    if (!validateEmail(email)) {
      document.getElementById('email-error')?.classList.remove('hidden');
      isValid = false;
    } else {
      document.getElementById('email-error')?.classList.add('hidden');
    }

    if (!validateMessage(message)) {
      document.getElementById('message-error')?.classList.remove('hidden');
      isValid = false;
    } else {
      document.getElementById('message-error')?.classList.add('hidden');
    }

    if (!isValid) {
      return;
    }

    // Set initial states
    setFormStatus('');
    setSuccessMessage('hidden');
    setErrorMessage('hidden');

    // Simulate Formspree form submission
    setTimeout(() => {
      // Success or error handling based on the result of your submission
      setSuccessMessage('success');
      setErrorMessage('hidden');
    }, 2000);
  }
</script>

<style scoped>
  .form-group {
    margin-bottom: 1.5rem;
  }

  .form-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 600;
    color: #e5e7eb; /* Gray-200 */
  }

  .form-input {
    width: 100%;
    padding: 0.75rem;
    border-radius: 0.375rem;
    background-color: #1e293b; /* Dark Navy */
    color: white;
    border: 1px solid #4b5563; /* Gray-600 */
    font-size: 0.875rem;
    transition: border-color 0.3s, background-color 0.3s;
  }

  .form-input:focus {
    border-color: #6366f1; /* Blue-500 */
    background-color: #334155; /* Darker Navy */
  }

  .submit-btn {
    width: 100%;
    padding: 0.75rem;
    background-color: #6366f1; /* Blue-500 */
    color: white;
    border: none;
    border-radius: 0.375rem;
    cursor: pointer;
    font-weight: 600;
  }

  .submit-btn:hover {
    background-color: #4f46e5; /* Blue-600 */
  }

  .form-status {
    display: block;
  }

  .success-message {
    color: #10b981; /* Green-500 */
  }

  .error-message {
    color: #ef4444; /* Red-500 */
  }

  .hidden {
    display: none;
  }
</style>
