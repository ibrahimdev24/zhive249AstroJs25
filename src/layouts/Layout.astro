---
import "../styles/global.css";
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import { siteConfig } from '../config';

interface Props {
  title?: string;
  description?: string;
  image?: string;
  article?: boolean;
  noIndex?: boolean;
  ogType?: 'website' | 'article';
  publishedTime?: string;
  modifiedTime?: string;
  authors?: string[];
  section?: string;
  tags?: string[];
}

const {
  title = siteConfig.name,
  description = siteConfig.description,
  image = siteConfig.ogImage,
  article = false,
  noIndex = false,
  ogType = article ? 'article' : 'website',
  publishedTime,
  modifiedTime,
  authors,
  section,
  tags,
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, siteConfig.site);
const socialImageURL = new URL(image, siteConfig.site).toString();

// Construct JSON-LD
const jsonLd = article ? {
  "@context": "https://schema.org",
  "@type": "Article",
  "headline": title,
  "description": description,
  "image": socialImageURL,
  "author": authors?.map(author => ({
    "@type": "Person",
    "name": author
  })) ?? [{ "@type": "Person", "name": siteConfig.author.name }],
  "publisher": {
    "@type": "Organization",
    "name": siteConfig.name,
    "logo": {
      "@type": "ImageObject",
      "url": new URL("/Logo.svg", siteConfig.site).toString()
    }
  },
  "datePublished": publishedTime,
  "dateModified": modifiedTime ?? publishedTime,
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": canonicalURL
  }
} : {
  "@context": "https://schema.org",
  "@type": "Organization",
  "name": siteConfig.name,
  "url": siteConfig.site,
  "logo": new URL("/Logo.svg", siteConfig.site).toString(),
  "sameAs": [
    siteConfig.social.twitter,
    siteConfig.social.github,
    siteConfig.social.linkedin
  ]
};

// Security Headers
const securityHeaders = {
  'Content-Security-Policy': [
    "default-src 'self'",
    "script-src 'self' 'unsafe-inline' 'unsafe-eval' *.googletagmanager.com",
    "style-src 'self' 'unsafe-inline' fonts.googleapis.com",
    "img-src 'self' data: https:",
    "font-src 'self' fonts.gstatic.com data:",
    "connect-src 'self' *.google-analytics.com",
    "frame-src 'self' *.youtube.com *.vimeo.com",
    "manifest-src 'self'",
    "worker-src 'self'",
    "base-uri 'self'",
    "form-action 'self'",
    "frame-ancestors 'self'",
    "object-src 'none'",
    "upgrade-insecure-requests"
  ].join('; '),
  'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload',
  'X-Content-Type-Options': 'nosniff',
  'X-Frame-Options': 'SAMEORIGIN',
  'X-XSS-Protection': '1; mode=block',
  'Referrer-Policy': 'strict-origin-when-cross-origin',
  'Permissions-Policy': [
    'accelerometer=self',
    'camera=self',
    'geolocation=self',
    'gyroscope=self',
    'magnetometer=self',
    'microphone=self',
    'payment=self',
    'usb=self'
  ].join(', '),
  'Cross-Origin-Embedder-Policy': 'require-corp',
  'Cross-Origin-Opener-Policy': 'same-origin',
  'Cross-Origin-Resource-Policy': 'same-origin'
};

// Set security headers
Object.entries(securityHeaders).forEach(([header, value]) => {
  Astro.response.headers.set(header, value);
});
---

<!doctype html>
<html lang="en" class="scroll-smooth dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <meta name="keywords" content={siteConfig.keywords.join(', ')} />
    <meta name="author" content={siteConfig.author.name} />
    <meta name="theme-color" content="#0f172a" />
    
    <!-- SEO -->
    <link rel="canonical" href={canonicalURL} />
    {noIndex && <meta name="robots" content="noindex,nofollow" />}
    {!noIndex && <meta name="robots" content="index,follow" />}
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/manifest.json" />
    
    <!-- Preload critical assets -->
    <link rel="preload" href="/fonts/SpaceGrotesk.woff2" as="font" type="font/woff2" crossorigin />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
    
    <!-- Open Graph -->
    <meta property="og:site_name" content={siteConfig.name} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:type" content={ogType} />
    <meta property="og:image" content={socialImageURL} />
    <meta property="og:image:alt" content={`${title} | ${siteConfig.name}`} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    {publishedTime && <meta property="article:published_time" content={publishedTime} />}
    {modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
    {section && <meta property="article:section" content={section} />}
    {tags?.map(tag => <meta property="article:tag" content={tag} />)}
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content={siteConfig.author.twitter} />
    <meta name="twitter:creator" content={siteConfig.author.twitter} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={socialImageURL} />
    
    <!-- PWA -->
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="apple-mobile-web-app-title" content={siteConfig.name} />
    
    <!-- Generator -->
    <meta name="generator" content={Astro.generator} />

    <!-- Title -->
    <title>{title} | {siteConfig.name}</title>

    <!-- JSON-LD -->
    <script type="application/ld+json" is:inline set:html={JSON.stringify(jsonLd)} />

    <!-- Service Worker -->
    <script>
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js', { scope: '/' })
            .then(registration => {
              console.log('ServiceWorker registration successful');
            })
            .catch(error => {
              console.error('ServiceWorker registration failed:', error);
            });
        });
      }
    </script>
  </head>
  <body class="bg-navy-700 text-navy-100 font-SpaceGrotesk">
    <!-- Skip to main content -->
    <a href="#main" class="sr-only focus:not-sr-only focus:fixed focus:z-50 focus:p-4 focus:bg-primary-500 focus:text-white">
      Skip to main content
    </a>

    <Navigation />

    <main id="main" class="animate-fade-in min-h-screen">
      <slot />
    </main>

    <Footer />

    <!-- Analytics (only in production) -->
    {import.meta.env.PROD && import.meta.env.GOOGLE_ANALYTICS_ID && (
      <>
        <script is:inline async src={`https://www.googletagmanager.com/gtag/js?id=${import.meta.env.GOOGLE_ANALYTICS_ID}`} />
        <script is:inline define:vars={{ GA_ID: import.meta.env.GOOGLE_ANALYTICS_ID }}>
          window.dataLayer = window.dataLayer || [];
          function gtag() {
            dataLayer.push(arguments);
          }
          gtag('js', new Date());
          gtag('config', GA_ID);
        </script>
      </>
    )}
  </body>
</html>
